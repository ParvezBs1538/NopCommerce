@model DeveloperDemoSearchModel

@{
    Layout = "_AdminLayout";
    //page title
    ViewBag.PageTitle = T("Admin.Misc.DeveloperDemos").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("DeveloperDemos");
}

@{
    const string hideSearchBlockAttributeName = "DeveloperDemoPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.Misc.DeveloperDemos")
    </h1>
    <div class="float-right">
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>
        <button type="button" id="delete-selected" class="btn btn-danger">
            <i class="far fa-trash-alt"></i>
            @T("Admin.Common.Delete.Selected")
        </button>
        <nop-action-confirmation asp-button-id="delete-selected" />

    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                <div class="card card-default card-search">
                    <div class="card-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                        </div>

                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="Name" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="Name" />
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="StatusId" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-select asp-for="StatusId" asp-items="Model.AvailableStatusOptions" />
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="DesignationId" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-select asp-for="DesignationId" asp-items="Model.AvailableDesignationOptions" />
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="form-group row">
                                <div class="text-center col-12">
                                    <button type="button" id="search-DeveloperDemos" class="btn btn-primary btn-search"><i class="fas fa-search"></i>@T("Admin.Common.Search")</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card card-default">
                    <div class="card-body">

                        @await Html.PartialAsync("Table", new DataTablesModel
                   {
                       Name = "DeveloperDemos-grid",
                       UrlRead = new DataUrl("List", "DeveloperDemo", null),
                       SearchButtonId = "search-DeveloperDemos",
                       Length = Model.PageSize,
                       LengthMenu = Model.AvailablePageSizes,
                       Filters = new List<FilterParameter>
                        {
                        new FilterParameter(nameof(Model.Name)),
                        new FilterParameter(nameof(Model.StatusId)),
                        new FilterParameter(nameof(Model.DesignationId))
                        },
                       ColumnCollection = new List<ColumnProperty>
                        {
                        new ColumnProperty(nameof(DeveloperDemoModel.Id))
                        {
                        IsMasterCheckBox = true,
                        Render = new RenderCheckBox("checkbox_DeveloperDemos"),
                        ClassName =  NopColumnClassDefaults.CenterAll,
                        Width = "50"
                        },
                        new ColumnProperty(nameof(DeveloperDemoModel.PictureThumbnailUrl))
                        {
                        Title = T("Admin.Misc.DeveloperDemo.Fields.Picture").Text,
                        Width = "100",
                        Render = new RenderPicture(width: 100)
                        },
                        new ColumnProperty(nameof(DeveloperDemoModel.Name))
                        {
                        Title = T("Admin.Misc.DeveloperDemo.Fields.Name").Text,
                        ClassName = NopColumnClassDefaults.CenterAll,
                        Width = "150",
                        },
                        new ColumnProperty(nameof(DeveloperDemoModel.DesignationStr))
                        {
                        Title = T("Admin.Misc.DeveloperDemo.Fields.Designation").Text,
                        Width = "150",
                        ClassName = NopColumnClassDefaults.CenterAll,
                        },
                        new ColumnProperty(nameof(DeveloperDemoModel.StatusStr))
                        {
                        Title = T("Admin.Misc.DeveloperDemo.Fields.Status").Text,
                        Width = "100",
                        ClassName = NopColumnClassDefaults.CenterAll,
                        },
                        new ColumnProperty(nameof(DeveloperDemoModel.IsMVP))
                        {
                        Title = T("Admin.Misc.DeveloperDemo.Fields.IsMVP").Text,
                        Width = "100",
                        ClassName = NopColumnClassDefaults.CenterAll,
                        Render = new RenderBoolean()
                        },
                        new ColumnProperty(nameof(DeveloperDemoModel.IsCertified))
                        {
                        Title = T("Admin.Misc.DeveloperDemo.Fields.IsCertified").Text,
                        Width = "100",
                        ClassName = NopColumnClassDefaults.CenterAll,
                        Render = new RenderBoolean()
                        },
                        new ColumnProperty(nameof(DeveloperDemoModel.Id))
                        {
                        Title = T("Admin.Common.Edit").Text,
                        Width = "100",
                        ClassName =  NopColumnClassDefaults.Button,
                        Render = new RenderButtonEdit(new DataUrl("Edit"))
                        }
                        }
                   })


                        <script>
                            $(document).ready(function () {
                                $('#delete-selected-action-confirmation-submit-button').bind('click', function () {
                                    let postData = {
                                        selectedIds: selectedIds
                                    };
                                    addAntiForgeryToken(postData);
                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@(Url.Action("DeleteSelected", "DeveloperDemo"))",
                                        data: postData,
                                        error: function (jqXHR, textStatus, errorThrown) {
                                            showAlert('deleteSelectedFailed', errorThrown);
                                        },
                                        complete: function (jqXHR, textStatus) {
                                            if (jqXHR.status === 204) {
                                                showAlert('nothingSelectedAlert', '@T("Admin.Common.Alert.NothingSelected")');
                                                return;
                                            }
                                            updateTable('#DeveloperDemos-grid');
                                        }
                                    });
                                    $('#delete-selected-action-confirmation').modal('toggle');
                                    return false;
                                });
                            });
                        </script>
                        <nop-alert asp-alert-id="deleteSelectedFailed" />
                        <nop-alert asp-alert-id="nothingSelectedAlert" />

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
